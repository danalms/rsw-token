buildscript {
	ext {
		springBootVersion = '1.5.1.RELEASE'
	}
	repositories {
//		mavenCentral()
		maven {
			url "${nexusUrl}/repository/maven-public"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'se.transmode.gradle:gradle-docker:1.2'
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'maven'
apply plugin: 'docker'

jar {
	baseName = 'rsw-token'
	version = '0.0.1'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

docker {
//    useApi true
//    hostUrl 'http://'
//    apiUsername 'user'
//    apiPassword 'password'
//    apiEmail 'mail@abc.com'
}

task buildDocker(type: Docker, dependsOn: build) {
	push = true
	// miniserver.local : Nexus hosted docker registry
	tag = "10.0.1.9:8082/rsw-token"
	tagVersion = "v1"
	dockerfile = file('src/main/docker/Dockerfile')
	applicationName = jar.baseName
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}

repositories {
//	mavenCentral()
	maven {
		url "${nexusUrl}/repository/maven-public"
	}
}

uploadArchives {
	repositories {
		mavenDeployer {
			repository(url: "${nexusUrl}/repository/maven-releases/") {
				authentication(userName: nexusUsername, password: nexusPassword)
			}
			snapshotRepository(url: "${nexusUrl}/repository/maven-snapshots") {
				authentication(userName: nexusUsername, password: nexusPassword)
			}
		}
	}
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('io.springfox:springfox-swagger2:2.6.0')
	compile('io.springfox:springfox-swagger-ui:2.6.0')
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'

    testCompile('org.springframework.boot:spring-boot-starter-test')
}
